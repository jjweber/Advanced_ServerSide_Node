'use strict';

let FormOpen 			= require('./FormOpen');

let Input 				= require('./Input');
let InputRadio 		= require('./InputRadio');
let InputSelect 	= require('./InputSelect');
let InputCheckbox = require('./InputCheckbox');
let InputTextarea = require('./InputTextarea');

var handler = {

	get (target, propKey, receiver) {

		if (propKey in target) {
			return Reflect.get(target, propKey, receiver);
		};

		return function (val) {
			target.opts[propKey] = val;
			return this;
		};

	}
};

class Forms {

	constructor (req) {
		this.req = req;
	}

	open(opts) {
		var formOpen = new FormOpen(opts);
		return new Proxy(formOpen, handler);
	}

	close() {
		return '</form>';
	}

	text (opts = {}) {
		var text = new Input(opts, this.data());
		return new Proxy(text, handler).type('text');
	}

	select (opts = {}) {
		var select = new InputSelect(opts, this.data());
		return new Proxy(select, handler);
	}

	textarea (opts = {}) {
		var textarea = new InputTextarea(opts, this.data());
		return new Proxy(textarea, handler);
	}

	checkbox (opts = {}) {
		var checkbox = new InputCheckbox(opts, this.data());
		return new Proxy(checkbox, handler);
	}

	radio (opts = {}) {
		var radio = new InputRadio(opts, this.data());
		return new Proxy(radio, handler);
	}

	submit (opts = {}) {
		var button = new Input(opts, this.data());
		return new Proxy(button, handler).type('submit').value('Submit');
	}

	data () {

		if (this.req.method === 'GET') {
			return this.req.query;
		};

		if (['PUT', 'POST'].indexOf(this.req.method) >= 0) {
			return this.req.body;
		};

		return {};

	}
};

module.exports = Forms;