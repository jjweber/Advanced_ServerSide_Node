let BaseElement = require('./BaseElement');

class Input extends BaseElement {

	constructor(opts, data) {
		super(opts);
		this.data = data;
	}

	default(val) {
		this.opts.value = this.opts.value || val;
		return this;
	}

	setAttr(key, val) {
		this.opts[key] = val;
	}

	getAttr(key) {
		return this.opts[key];
	}

	deleteAttr(key) {
		if (!(key in this.opts)) return false;
		delete this.opts[key];
	}

	attrs(attrs) {
		Object.assign(this.opts, attrs); 
		return this;
	}

	_restore() {
		let name;
		if (!(name = this.opts.name)) return;
		if (!(name in this.data)) return;
		this.opts.value = this.data[name];
	}

	render() {

		this._restore();

		return ['<input',
								this.renderAttrs(),
						'>'].join(' ');
	}

	toString () {
		return this.render();
	}

};

module.exports = Input;